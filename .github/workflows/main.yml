# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: linting
      uses: rickstaa/action-black@v1
      with:
        black_args: ". --check"
    - name: detect-secrets
      uses: reviewdog/action-detect-secrets@master
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review # Change reporter.
    - name: misspell
      uses: reviewdog/action-misspell@v1
      with:
        github_token: ${{ secrets.github_token }}
        locale: "US"
    - uses: reviewdog/action-alex@v1
      with:
        github_token: ${{ secrets.github_token }}
        # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
        reporter: github-pr-review
        # Change reporter level if you need.
        # GitHub Status Check won't become failure with warning.
        level: warning
    - uses: reviewdog/action-black@v2
      with:
       github_token: ${{ secrets.github_token }}
        # Change reviewdog reporter if you need [github-pr-check, github-check].
       reporter: github-pr-check
         # Change reporter level if you need.
        # GitHub Status Check won't become failure with a warning.
       level: warning
    - uses: actions/setup-python@v2
      with:
        python-version: '3.7' 
    - name: install pipenv
      run: pip3 install pipenv
    - name: Cache pipenv packages
      id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ env.pythonLocation }}-${{ runner.os }}-build-${{ hashFiles('**/Pipfile.lock') }}

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: |
        echo Hello, world!
        echo github ref: ${{ github.ref }}
        echo pipenv-cache hit: ${{ steps.cache-pipenv.outputs.cache-hit }}
    - name: install package
      run: make config
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.6.0
      with:
        mongodb-version: latest
    - name: Run test
      run: |
         make test
    - name: bumpversion
      if: endsWith(github.ref, '/master')
      run: |
        git config --global user.name "github"
        git config --global user.email "noreply@github.com"
        make bumpversion
        git push origin master --tags
        python setup.py sdist
    - name: Publish a Python distribution to PyPI
      if: endsWith(github.ref, '/master')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
